<?xml version="1.0"?>

<!-- McDonnell Douglas F-15 Autoflight System -->
<!-- Copyright (c) 2019 Joshua Davidson (Octal450) -->

<system name="autoflight">
	
	<property value="0">autoflight/pitch/altitude-2-sec-ahead</property> <!-- autoflight-rules.xml -->
	<property value="0">autoflight/input/roll-switch</property>
	<property value="0">autoflight/input/pitch-switch</property>
	<property value="0">autoflight/input/hdg-active</property>
	<property value="0">autoflight/roll/heading/pi</property>
	<property value="0">autoflight/roll/master-pid</property>
	<property value="0">autoflight/pitch/master-pid</property>
	<property value="0">autoflight/input/vs-active</property>
	<property value="0">autoflight/pitch/vs/pid</property>
	
	<property value="0">autoflight/roll/p-gain</property>
	<property value="0">autoflight/roll/i-gain</property>
	<property value="0">autoflight/roll/d-gain</property>
	<property value="0">autoflight/pitch/p-gain</property>
	<property value="0">autoflight/pitch/i-gain</property>
	<property value="0">autoflight/pitch/d-gain</property>
	
	<channel name="Autoflight: Logic">
		
		<switch name="position/wow">
			<default value="0"/>
			<test logic="OR" value="1">
				gear/unit[0]/WOW eq 1
				gear/unit[1]/WOW eq 1
				gear/unit[2]/WOW eq 1
			</test>
		</switch>
		
		<switch name="autoflight/can-engage">
			<default value="1"/>
			<test logic="OR" value="0"> <!-- Add conditions where AP fails here -->
				position/wow eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/ss/delay">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						250  0.20
						450  0.07
						950  0.02
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<lag_filter name="autoflight/ss/roll-input">
			<input>/controls/flight/aileron</input>
			<c1>8.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/pitch-input">
			<input>/controls/flight/elevator</input>
			<c1>8.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/yaw-input">
			<input>/controls/flight/rudder</input>
			<c1>8.6</c1>
		</lag_filter>
		
		<fcs_function name="autoflight/ss/aileron-norm">
			<function>
				<product>
					<quotient>
						<property>/controls/flight/aileron</property>
						<pow>
							<value>1</value>
							<property>/controls/flight/aileron</property>
						</pow>
					</quotient>
					<product>
						<max>
							<value>0</value>
							<difference>
								<abs>
									<property>/controls/flight/aileron</property>
								</abs>
								<property>/autopilot/settings/aileron-deadzone</property>
							</difference>
						</max>
						<quotient>
							<value>1.0</value>
							<difference>
								<value>1.0</value>
								<property>/autopilot/settings/aileron-deadzone</property>
							</difference>
						</quotient>
					</product>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/ss/elevator-norm">
			<function>
				<product>
					<quotient>
						<property>/controls/flight/elevator</property>
						<pow>
							<value>1</value>
							<property>/controls/flight/elevator</property>
						</pow>
					</quotient>
					<product>
						<max>
							<value>0</value>
							<difference>
								<abs>
									<property>/controls/flight/elevator</property>
								</abs>
								<property>/autopilot/settings/elevator-deadzone</property>
							</difference>
						</max>
						<quotient>
							<value>1.0</value>
							<difference>
								<value>1.0</value>
								<property>/autopilot/settings/elevator-deadzone</property>
							</difference>
						</quotient>
					</product>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/ss/rudder-norm">
			<function>
				<product>
					<quotient>
						<property>/controls/flight/rudder</property>
						<pow>
							<value>1</value>
							<property>/controls/flight/rudder</property>
						</pow>
					</quotient>
					<product>
						<max>
							<value>0</value>
							<difference>
								<abs>
									<property>/controls/flight/rudder</property>
								</abs>
								<property>/autopilot/settings/rudder-deadzone</property>
							</difference>
						</max>
						<quotient>
							<value>1.0</value>
							<difference>
								<value>1.0</value>
								<property>/autopilot/settings/rudder-deadzone</property>
							</difference>
						</quotient>
					</product>
				</product>
			</function>
		</fcs_function>
		
		<pure_gain name="/autopilot/settings/aileron-deadzone-neg">
			<input>/autopilot/settings/aileron-deadzone</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<pure_gain name="/autopilot/settings/elevator-deadzone-neg">
			<input>/autopilot/settings/elevator-deadzone</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<pure_gain name="/autopilot/settings/rudder-deadzone-neg">
			<input>/autopilot/settings/rudder-deadzone</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<switch name="autoflight/ss/force">
			<default value="0"/>
			<test logic="OR" value="1">
				autoflight/ss/roll-input lt /autopilot/settings/aileron-deadzone-neg
				autoflight/ss/roll-input gt /autopilot/settings/aileron-deadzone
				autoflight/ss/pitch-input lt /autopilot/settings/elevator-deadzone-neg
				autoflight/ss/pitch-input gt /autopilot/settings/elevator-deadzone
				autoflight/ss/yaw-input lt /autopilot/settings/rudder-deadzone-neg
				autoflight/ss/yaw-input gt /autopilot/settings/rudder-deadzone
			</test>
		</switch>
		
		<switch name="autoflight/ss/reset-time">
			<default value="/sim/time/elapsed-sec"/>
			<test value="autoflight/ss/reset-time">
				autoflight/ss/force eq 0
			</test>
		</switch>
		
		<summer name="autoflight/ss/reset-time-delay">
			<input>autoflight/ss/reset-time</input>
			<input>autoflight/ss/delay</input>
		</summer>
		
		<switch name="autoflight/ss/active">
			<default value="0"/>
			<test value="1">
				/sim/time/elapsed-sec lt autoflight/ss/reset-time-delay
			</test>
		</switch>
		
		<switch name="autoflight/output/roll-master">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/input/roll-switch eq 1
				autoflight/can-engage eq 1
				autoflight/ss/force eq 0
			</test>
		</switch>
		
		<switch name="autoflight/output/pitch-master">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/input/pitch-switch eq 1
				autoflight/can-engage eq 1
				autoflight/ss/force eq 0
			</test>
		</switch>
	
	</channel>
	
	<channel name="Autoflight: Drivers">
		
		<!-- HDG SEL -->
		<switch name="autoflight/roll/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				autoflight/output/roll-master eq 1
				autoflight/input/hdg-active eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/heading/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/gain-switch</independentVar>
					<tableData>
						     0    1  
						200  1.8  0.0
						600  3.7  0.0
						950  4.1  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/heading/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/gain-switch</independentVar>
					<tableData>
						     0      1  
						250  0.005  0.000
						950  0.010  0.000
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/heading/bank-max">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">inertia/weight-lbs</independentVar>
					<tableData>
						      0 38000 45000 55000 70000
						  0   0     0     0     0     0
						150  10    10     5     5     5
						210  30    30    20    15    15
						600  60    60    50    50    50 
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<pure_gain name="autoflight/roll/heading/bank-min">
			<input>autoflight/roll/heading/bank-max</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<fcs_function name="autoflight/roll/heading/bank-trigger-max">
			<function>
				<sum>
					<property>autoflight/roll/heading/bank-max</property>
					<value>-0.01</value>
				</sum>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/heading/bank-trigger-min">
			<function>
				<sum>
					<property>autoflight/roll/heading/bank-min</property>
					<value>0.01</value>
				</sum>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/heading/trigger">
			<default value="0"/>
			<test value="-1">
				autoflight/roll/gain-switch eq 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/heading/pi le autoflight/roll/heading/bank-trigger-min
				autoflight/roll/heading/pi ge autoflight/roll/heading/bank-trigger-max
			</test>
		</switch>
		
		<pid name="autoflight/roll/heading/pi-v">
			<input>autoflight/roll/heading-error-deg</input>
			<kp>autoflight/roll/heading/p-gain</kp>
			<ki>autoflight/roll/heading/i-gain</ki>
			<kd>0.0</kd>
			<trigger>autoflight/roll/heading/trigger</trigger>
			<clipto>
				<min>autoflight/roll/heading/bank-min</min>
				<max>autoflight/roll/heading/bank-max</max>
			</clipto>
			<output>autoflight/roll/heading/pi</output>
		</pid>
		
		<!-- ALT HOLD -->
		<fcs_function name="autoflight/pitch/alt/error">
			<function>
				<difference>
					<property>/instrumentation/altimeter/indicated-altitude-ft</property>
					<property>/autopilot/settings/target-altitude-ft</property>
					<value>2</value>
				</difference>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alt/gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200 -7
						600 -5
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alt/max-rate-fpm">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">inertia/weight-lbs</independentVar>
					<tableData>
						     0    38000 45000 55000 70000
						300  2000  2000  1500  1000  1000
						600  6000  6000  3000  3000  2000
					</tableData>
				</table>
			</function>
		</fcs_function>
		
        <pure_gain name="autoflight/pitch/alt/vs-target">
			<input>autoflight/pitch/alt/error</input>
			<gain>autoflight/pitch/alt/gain</gain>
			<clipto>
				<min>-autoflight/pitch/alt/max-rate-fpm</min>
				<max>autoflight/pitch/alt/max-rate-fpm </max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/alt/predicted">
			<function>
				<sum>
					<quotient>
						<property>/instrumentation/gps/indicated-vertical-speed</property>
						<product>
							<property>autoflight/pitch/alt/gain</property>
							<value>-1</value>
						</product>
					</quotient>
					<property>/instrumentation/altimeter/indicated-altitude-ft</property>
				</sum>
			</function>
		</fcs_function>
	
	</channel>
	
	<channel name="Autoflight: Roll Channel">
		
		<switch name="autoflight/roll/att-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/output/roll-master eq 1
				autoflight/input/hdg-active ne 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/att-hold-switch">
			<default value="autoflight/roll/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/roll/att-hold-active ne 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/p-rad_sec gt -0.0174533
				velocities/p-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/roll/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/roll/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/roll/roll-hold-target</property>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
			<clipto>
				<min>-1.0472</min>
				<max>1.0472</max>
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/roll/target-roll-deg">
			<default value="/orientation/roll-deg"/>
			<test logic="AND" value="autoflight/roll/heading/pi">
				autoflight/output/roll-master eq 1
				autoflight/input/hdg-active eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-cmd-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/output/roll-master</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/input/hdg-active</property>
							<value>1</value>
						</eq>
					</and>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/roll/target-roll-deg</property>
					</toradians>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/roll-rad-input">
			<default value="attitude/roll-rad"/>
			<test logic="AND" value="autoflight/roll/roll-hold-target">
				autoflight/output/roll-master eq 1
				autoflight/input/hdg-active ne 1
			</test>
			<test logic="AND" value="autoflight/roll/roll-cmd-target">
				autoflight/output/roll-master eq 1
				autoflight/input/hdg-active eq 1
			</test>
		</switch>
		
		<summer name="autoflight/roll/roll-rad-error">
			<input>attitude/roll-rad</input>
			<input>-autoflight/roll/roll-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/roll/roll-rate-p"> <!-- Calculate optimum roll rate -->
			<input>autoflight/roll/roll-rad-error</input>
			<gain>-2.5</gain>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/roll/p-rad_sec">
			<function>
				<toradians>
					<property>/orientation/roll-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="autoflight/roll/roll-rate-error">
			<input>autoflight/roll/p-rad_sec</input>
			<input>-autoflight/roll/roll-rate-p</input>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</summer>
		
		<fcs_function name="autoflight/roll/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/roll-master</independentVar>
					<tableData>
						     0    1
						200  0.0 -1.8
						320  0.0 -1.4
						600  0.0 -0.9
						950  0.0 -0.5
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/roll-master</independentVar>
					<tableData>
						     0    1
						200  0.0 -0.8
						320  0.0 -0.7
						600  0.0 -0.4
						950  0.0 -0.2
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/roll-master</independentVar>
					<tableData>
						     0      1
						200  0.000 -0.100
						320  0.000 -0.050
						600  0.000 -0.010
						950  0.000 -0.005
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/trigger">
			<default value="0"/>
			<test value="-1">
				autoflight/output/roll-master ne 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/master-pid le -0.999
				autoflight/roll/master-pid ge 0.999
			</test>
		</switch>
		
		<pid name="autoflight/roll/master-pid-v">
			<input>autoflight/roll/roll-rate-error</input>
			<kp>autoflight/roll/p-gain</kp>
			<ki>autoflight/roll/i-gain</ki>
			<kd>autoflight/roll/d-gain</kd>
			<trigger>autoflight/roll/trigger</trigger>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
			<output>autoflight/roll/master-pid</output>
		</pid>
		
		<switch name="autoflight/roll/roll-rate-demand">
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/master-pid">
				autoflight/output/roll-master eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="Autoflight: Pitch Channel">
		
		<fcs_function name="autoflight/pitch/fpa">
			<function>
				<todegrees>
					<difference>
						<property>attitude/pitch-rad</property>
						<property>aero/alpha-rad</property>
					</difference>
				</todegrees>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alpha-limit-min">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						300 -10
						600  -6
					</tableData>
				</table>
			</function>
		</fcs_function>
		
        <fcs_function name="autoflight/pitch/alpha-limit-max">
            <function>
                <table>
                    <independentVar lookup="row">velocities/vc-kts</independentVar>
                    <independentVar lookup="column">inertia/weight-lbs</independentVar>
                    <tableData>
                                0 38000 45000 55000 70000
                          0     5     5     5    5      5
                        150    10    10     5    5      5
                        300    10    10     7    7      7
                        600    13    13     9    9      9
                    </tableData>
                </table>
            </function>
        </fcs_function>
		
		<fcs_function name="autoflight/pitch/pitch-hold-min">
			<function>
				<sum>
					<property>autoflight/pitch/fpa</property>
					<property>autoflight/pitch/alpha-limit-min</property>
				</sum>
			</function>
		</fcs_function>
		
		<pure_gain name="autoflight/pitch/pitch-hold-min-rad">
			<input>autoflight/pitch/pitch-hold-min</input>
			<gain>0.0174533</gain> <!-- DEG to RAD -->
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/pitch-hold-max">
			<function>
				<sum>
					<property>autoflight/pitch/fpa</property>
					<property>autoflight/pitch/alpha-limit-max</property>
				</sum>
			</function>
		</fcs_function>
		
		<pure_gain name="autoflight/pitch/pitch-hold-max-rad">
			<input>autoflight/pitch/pitch-hold-max</input>
			<gain>0.0174533</gain> <!-- DEG to RAD -->
		</pure_gain>
		
		<switch name="autoflight/pitch/att-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/output/pitch-master eq 1
				autoflight/input/vs-active ne 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/att-hold-switch">
			<default value="autoflight/pitch/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/pitch/att-hold-active ne 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/q-rad_sec gt -0.0174533
				velocities/q-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/pitch/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/pitch/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/pitch/pitch-hold-target</property>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
			<clipto> <!-- Limit AoA -->
				<min>autoflight/pitch/pitch-hold-min-rad</min>
				<max>autoflight/pitch/pitch-hold-max-rad</max>
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/pitch/target-pitch-deg">
			<default value="/orientation/pitch-deg"/>
			<test logic="AND" value="autoflight/pitch/vs/pid">
				autoflight/output/pitch-master eq 1
				autoflight/input/vs-active eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-cmd-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/output/pitch-master</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/input/vs-active</property>
							<value>1</value>
						</eq>
					</and>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/pitch/target-pitch-deg</property>
					</toradians>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/pitch-rad-input">
			<default value="attitude/pitch-rad"/>
			<test logic="AND" value="autoflight/pitch/pitch-hold-target">
				autoflight/output/pitch-master eq 1
				autoflight/input/vs-active ne 1
			</test>
			<test logic="AND" value="autoflight/pitch/pitch-cmd-target">
				autoflight/output/pitch-master eq 1
				autoflight/input/vs-active eq 1
			</test>
		</switch>
		
		<summer name="autoflight/pitch/pitch-rad-error">
			<input>attitude/pitch-rad</input>
			<input>-autoflight/pitch/pitch-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/pitch/pitch-rate-p"> <!-- Calculate optimum pitch rate -->
			<input>autoflight/pitch/pitch-rad-error</input>
			<gain>-1.5</gain>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/thetadot-rad_sec">
			<function>
				<toradians>
					<property>/orientation/pitch-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="autoflight/pitch/pitch-rate-error">
			<input>autoflight/pitch/thetadot-rad_sec</input>
			<input>-autoflight/pitch/pitch-rate-p</input>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</summer>
		
		<fcs_function name="autoflight/pitch/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/pitch-master</independentVar>
					<tableData>
						     0  1
						200  0  14
						320  0  9
						600  0  5
						950  0  4
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/pitch-master</independentVar>
					<tableData>
						     0  1
						200  0  13
						320  0  8
						600  0  4
						950  0  3
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/output/pitch-master</independentVar>
					<tableData>
						     0     1
						200  0.00  0.30
						320  0.00  0.20
						600  0.00  0.18
						950  0.00  0.15
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/trigger">
			<default value="0"/>
			<test value="-1">
				autoflight/output/pitch-master ne 1
			</test>
			<test logic="OR" value="1">
				autoflight/pitch/master-pid le -0.999
				autoflight/pitch/master-pid ge 0.519
			</test>
		</switch>
		
		<pid name="autoflight/pitch/master-pid-v">
			<input>autoflight/pitch/pitch-rate-error</input>
			<kp>autoflight/pitch/p-gain</kp>
			<ki>autoflight/pitch/i-gain</ki>
			<kd>autoflight/pitch/d-gain</kd>
			<trigger>autoflight/pitch/trigger</trigger>
			<clipto>
				<min>-0.999</min>
				<max>0.519</max>
			</clipto>
			<output>autoflight/pitch/master-pid</output>
		</pid>
		
		<pure_gain name="autoflight/pitch/master-pid-inv">
			<input>autoflight/pitch/master-pid</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<switch name="autoflight/pitch/master-pid-switched">
			<default value="autoflight/pitch/master-pid"/>
			<test logic="OR" value="autoflight/pitch/master-pid-inv">
				attitude/roll-rad lt -1.5708
				attitude/roll-rad gt 1.5708
			</test>
		</switch>
		
		<switch name="autoflight/pitch/pitch-rate-demand">
			<default value="0"/>
			<test value="autoflight/pitch/master-pid-switched">
				autoflight/output/pitch-master eq 1
			</test>
		</switch>
	
	</channel>

</system>
